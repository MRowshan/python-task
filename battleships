#!/usr/bin/python3
import re

class ships():
	boats = []
	def add(self, boat):
		# assert isinstance(boat, ships)
		self.boats.append(boat)

# create patrolboat, max 2 instances
class patrolboat(ships):
	instances = 0
	def __init__(self):
		self.name = "Patrol Boat"
		self.length = "1"
		self.width = "2"
		if patrolboat.instances == 2:
			del self
			print("Maximum of 2 patrol boats")
			return
		patrolboat.instances += 1
		print("Patrol boat created")

# create battleship, max 2 instances
class battleship(ships):
	instances = 0
	def __init__(self):
		self.name = "Battleship"
		self.length = "1"
		self.width = "3"
		if battleship.instances == 2:
			del self
			print("Maximum of 2 battleships")
			return
		battleship.instances += 1
		print("Battleship created")

# create submarine, max 1 instances
class submarine(ships):
	instances = 0
	def __init__(self):
		self.name = "Submarine"
		self.length = "1"
		self.width = "3"
		if submarine.instances == 1:
			del self
			print("Maximum of 1 submarine")
			return
		submarine.instances += 1
		print("Submarine created")

# create destroyer, max 1 instances
class destroyer(ships):
	instances = 0
	def __init__(self):
		self.name = "Destroyer"
		self.length = "1"
		self.width = "4"
		if destroyer.instances == 1:
			del self
			print("Maximum of 1 destroyer")
			return
		destroyer.instances += 1
		print("Destroyer created")

# create carrier, max 1 instances
class carrier(ships):
	instances = 0
	def __init__(self):
		self.name = "Carrier"
		self.length = "1"
		self.width = "5"
		if carrier.instances == 1:
			del self
			print("Maximum of 1 carrier")
			return
		carrier.instances += 1
		print("Carrier created")

def printTable(a):
	# print out table
	print("--------------------------------------------------")
	for n in a:
		print(n)
	print("--------------------------------------------------")

# create 10x10 board
row = 10
col = 10
a = [0] * row
for i in range(row):
	a[i] = ['-'] * col

# add borders to board
a[0][0] = '*'

a[0][1] = '1'
a[0][2] = '2'
a[0][3] = '3'
a[0][4] = '4'
a[0][5] = '5'
a[0][6] = '6'
a[0][7] = '7'
a[0][8] = '8'
a[0][9] = '9'

a[1][0] = '1'
a[2][0] = '2'
a[3][0] = '3'
a[4][0] = '4'
a[5][0] = '5'
a[6][0] = '6'
a[7][0] = '7'
a[8][0] = '8'
a[9][0] = '9'


printTable(a)

# create ships
ships = ships()
ships.add(patrolboat())
ships.add(patrolboat())
ships.add(battleship())
ships.add(battleship())
ships.add(submarine())
ships.add(destroyer())
ships.add(carrier())

# regex pattern to check user input
#pattern = re.compile("[0-9]")
for ship in ships.boats:
	# location = input("Where would you like to place your " + ship.name + "\n" +
	#					"Enter a coordinate from (1,1) to (9,9) \n")
	x = int(input("Enter x coordinate for " + ship.name + "\n"))

	y = int(input("Enter y cooridnate for " + ship.name + "\n"))

	print(x, y)
	#if pattern.match(x):
	if 0<=x<=9 and 0<=y<=9:
		a[x][y] = 'O'
		#x, y, z = location
		#x = location.split(",")
		#print(x)
		#print(type(x))
		#int(x)
		#print(type(x))

		direction = input("Enter direction of boat: \n" +
							"v) vertical, h) horizontal \n")
		if direction == 'v':
			#print(range(1, int(ship.height)))
			for i in range(1, int(ship.width)):
				a[x+i][y] = 'O'
				#print(i)
			printTable(a)
		elif direction == 'h':
			for i in range(1, int(ship.width)):
				a[x][y+i] = 'O'
			printTable(a)
		else:
			print('enter v or h')
	else:
		print("Input has to be between 0 and 9")
		break
